---
include: rocblas_common.yaml
include: known_bugs.yaml

Definitions:
  - &small_matrix_size_range
    - { N:     1, stride_a:       1 }
    - { N:     1, stride_a:       1 }
    - { N:    10, stride_a:       100 }
    - { N:    1, stride_a:       1 }
    - { N:    10, stride_a:      55 }
    - { N:   100, stride_a:    40000 }

  - &special_case_range
    - { N: 0, incx: 1, batch_count: 1, stride_a: 1 }
    - { N: 1, incx: 1, batch_count: 0, stride_a: 1 }

    - { N: -1, incx: 1, batch_count:  0, stride_a: 1 }
    - { N:  0, incx: 0, batch_count:  0, stride_a: 1 }
    - { N:  0, incx: 1, batch_count: -1, stride_a: 1 }

  - &medium_matrix_size_range
    - { N:   300, stride_a:   160000 }
    - { N:   600, stride_a:   400000 }

  - &large_matrix_size_range
    - { N:  1000, stride_a:  1000000 }
    - { N:  2000, stride_a:  4000000 }
    - { N:  4011, stride_a: 16088200 }
    - { N:  8000, stride_a: 64000000 }

  - &incx_range
    - [2, -2, 1, -1, 3, 10]

  - &incx_range_small
    - [ 2 ]

  - &size_t_index
    - { N: 65536, incx: 1 }
    - { N: 3, incx: *c_pos_x2_overflow_int32 }
    - { N: 3, incx: *c_neg_x2_overflow_int32 }

Tests:
- name: tpmv_bad_arg
  category: pre_checkin
  function: tpmv_bad_arg
  precision: *single_double_precisions
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  api: [ C, FORTRAN ]

- name: tpmv_arg_checks
  category: quick
  function:
  - tpmv: *single_double_precisions
  - tmpv_batched: *single_double_precisions
  - tpmv_strided_batched: *single_double_precisions
  uplo: L
  transA: N
  diag: N
  matrix_size: *special_case_range

- name: tpmv_size_t
  category: stress
  function: tpmv
  precision: *single_precision
  uplo: [ U, L ]
  transA: [ N, T ]
  diag: [ N ]
  matrix_size: *size_t_index
  os_flags: LINUX
  gpu_arch: ['90a']

- name: tpmv_size_t
  category: stress
  function: tpmv
  precision: *single_precision_complex
  uplo: [ U, L ]
  transA: [ C ]
  diag: [ N ]
  matrix_size: *size_t_index
  os_flags: LINUX
  gpu_arch: ['90a']

- name: tpmv_small
  category: quick
  function: tpmv
  precision: *single_double_precisions_complex_real
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  matrix_size: *small_matrix_size_range
  incx: *incx_range_small
  api: FORTRAN

- name: tpmv_small
  category: quick
  function: tpmv
  precision: *single_double_precisions_complex_real
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  matrix_size: *small_matrix_size_range
  incx: *incx_range

- name: tpmv_medium
  category: pre_checkin
  function: tpmv
  precision: *single_double_precisions_complex_real
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  matrix_size: *medium_matrix_size_range
  incx: *incx_range

- name: tpmv_large
  category: nightly
  function: tpmv
  precision: *single_double_precisions_complex_real
  uplo: [L, U]
  transA: [  N, T, C ]
  diag: [N, U]
  matrix_size: *large_matrix_size_range
  incx: *incx_range_small

- name: tpmv_64
  category: stress
  arguments:
    - { N: 2, incx: 2147483649, batch_count: 1 }
    - { N: 2, incx: -2147483649, batch_count: 1 }
    - { N: 2, stride_a: 4, stride_x: 2, incx: 1, batch_count: *c_grid_yz_require_passes }
  uplo: [ L ]
  transA: [  N, T ]
  diag: [ N ]
  api: [ C_64 ]
  os_flags: [ LINUX ]
  function:
    - tpmv: *single_precision
    - tpmv_batched: *single_precision
    - tpmv_strided_batched: *single_precision

- name: tpmv_batched_bad_arg
  category: pre_checkin
  function: tpmv_batched_bad_arg
  precision: *single_double_precisions
  uplo: [L, U]
  transA: [  N, T, C ]
  diag: [N, U]
  api: [ C, FORTRAN ]

- name: tpmv_batched_small
  category: quick
  function: tpmv_batched
  precision: *single_double_precisions_complex_real
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  matrix_size: *small_matrix_size_range
  incx: *incx_range_small
  batch_count: [ -1, 0, 3 ]
  api: FORTRAN

- name: tpmv_batched_small
  category: quick
  function: tpmv_batched
  precision: *single_double_precisions
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  matrix_size: *small_matrix_size_range
  incx: *incx_range
  batch_count: [ 1, 3 ]

- name: tpmv_batched_medium
  category: pre_checkin
  function: tpmv_batched
  precision: *single_double_precisions_complex_real
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  matrix_size: *medium_matrix_size_range
  incx: *incx_range
  batch_count: [ 3 ]

- name: tpmv_batched_large
  category: nightly
  function: tpmv_batched
  precision: *single_double_precisions
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  matrix_size: *large_matrix_size_range
  incx: *incx_range_small
  batch_count: [ 3 ]

- name: tpmv_strided_batched_bad_arg
  category: pre_checkin
  function: tpmv_strided_batched_bad_arg
  precision: *single_double_precisions
  transA: N
  uplo: [L]
  transA: [  T ]
  diag: [N]
  stride_scale: [ 1 ]

- name: tpmv_strided_batched_small
  category: quick
  function: tpmv_strided_batched
  precision: *single_double_precisions_complex_real
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  matrix_size: *small_matrix_size_range
  incx: *incx_range_small
  batch_count: [ -1, 0, 3 ]
  stride_scale: [ 2 ]
  api: FORTRAN

- name: tpmv_strided_batched_small
  category: quick
  function: tpmv_strided_batched
  precision: *single_double_precisions
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  matrix_size: *small_matrix_size_range
  incx: *incx_range
  batch_count: [ 1, 3 ]
  stride_scale: [ 2 ]

- name: tpmv_strided_batched_medium
  category: pre_checkin
  function: tpmv_strided_batched
  precision: *single_double_precisions_complex_real
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  matrix_size: *medium_matrix_size_range
  incx: *incx_range
  batch_count: [ 3 ]
  stride_scale: [ 1.2 ]

- name: tpmv_strided_batched_large
  category: nightly
  function: tpmv_strided_batched
  precision: *single_double_precisions
  uplo: [L, U]
  transA: [N, T, C]
  diag: [N, U]
  matrix_size: *large_matrix_size_range
  incx: *incx_range_small
  batch_count: [ 3 ]
  stride_scale: [ 1.2 ]

- name: tpmv_graph_test
  category: pre_checkin
  function:
        - tpmv
        - tpmv_batched
        - tpmv_strided_batched
  precision: *single_double_precisions
  uplo: [ U ]
  transA: [ N ]
  diag: [ N ]
  matrix_size:
    - { N:    10, stride_a:      55 }
  incx: *incx_range
  batch_count: [ 3 ]
  stride_scale: [ 2 ]
  graph_test: true
...
